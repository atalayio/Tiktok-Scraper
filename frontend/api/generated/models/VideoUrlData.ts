/* tslint:disable */
/* eslint-disable */
/**
 * TikTok Video Scraper API
 * API for scraping and downloading TikTok videos
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { VideoUrlDataMetadata } from './VideoUrlDataMetadata';
import {
    VideoUrlDataMetadataFromJSON,
    VideoUrlDataMetadataFromJSONTyped,
    VideoUrlDataMetadataToJSON,
    VideoUrlDataMetadataToJSONTyped,
} from './VideoUrlDataMetadata';

/**
 * 
 * @export
 * @interface VideoUrlData
 */
export interface VideoUrlData {
    /**
     * 
     * @type {string}
     * @memberof VideoUrlData
     */
    video_url?: string;
    /**
     * 
     * @type {string}
     * @memberof VideoUrlData
     */
    video_id?: string;
    /**
     * 
     * @type {VideoUrlDataMetadata}
     * @memberof VideoUrlData
     */
    metadata?: VideoUrlDataMetadata;
}

/**
 * Check if a given object implements the VideoUrlData interface.
 */
export function instanceOfVideoUrlData(value: object): value is VideoUrlData {
    return true;
}

export function VideoUrlDataFromJSON(json: any): VideoUrlData {
    return VideoUrlDataFromJSONTyped(json, false);
}

export function VideoUrlDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): VideoUrlData {
    if (json == null) {
        return json;
    }
    return {
        
        'video_url': json['video_url'] == null ? undefined : json['video_url'],
        'video_id': json['video_id'] == null ? undefined : json['video_id'],
        'metadata': json['metadata'] == null ? undefined : VideoUrlDataMetadataFromJSON(json['metadata']),
    };
}

export function VideoUrlDataToJSON(json: any): VideoUrlData {
    return VideoUrlDataToJSONTyped(json, false);
}

export function VideoUrlDataToJSONTyped(value?: VideoUrlData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'video_url': value['video_url'],
        'video_id': value['video_id'],
        'metadata': VideoUrlDataMetadataToJSON(value['metadata']),
    };
}

